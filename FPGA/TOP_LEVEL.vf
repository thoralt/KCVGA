////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.6
//  \   \         Application : sch2hdl
//  /   /         Filename : TOP_LEVEL.vf
// /___/   /\     Timestamp : 03/16/2020 23:28:42
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath "C:/users/crossover/My Documents/source/KCVGA/FPGA/ipcore_dir" -intstyle ise -family spartan3a -verilog "C:/users/crossover/My Documents/source/KCVGA/FPGA/TOP_LEVEL.vf" -w "C:/users/crossover/My Documents/source/KCVGA/FPGA/TOP_LEVEL.sch"
//Design Name: TOP_LEVEL
//Device: spartan3a
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module TOP_LEVEL(CLK_IN, 
                 KC_B, 
                 KC_CLK, 
                 KC_EX, 
                 KC_EZ, 
                 KC_G, 
                 KC_HSYNC, 
                 KC_R, 
                 KC_VSYNC, 
                 nRESET, 
                 PM_A, 
                 PM_nCS, 
                 PM_nRD, 
                 PM_nWR, 
                 SCANLINES, 
                 SRAM_A, 
                 SRAM_nBHE, 
                 SRAM_nBLE, 
                 SRAM_nCE, 
                 SRAM_nOE, 
                 SRAM_nWE, 
                 VGA_B, 
                 VGA_G, 
                 VGA_HSYNC, 
                 VGA_R, 
                 VGA_VSYNC, 
                 PM_D, 
                 SRAM_D);

    input CLK_IN;
    input KC_B;
    input KC_CLK;
    input KC_EX;
    input KC_EZ;
    input KC_G;
    input KC_HSYNC;
    input KC_R;
    input KC_VSYNC;
    input nRESET;
    input [1:0] PM_A;
    input PM_nCS;
    input PM_nRD;
    input PM_nWR;
    input SCANLINES;
   output [16:0] SRAM_A;
   output SRAM_nBHE;
   output SRAM_nBLE;
   output SRAM_nCE;
   output SRAM_nOE;
   output SRAM_nWE;
   output [3:0] VGA_B;
   output [3:0] VGA_G;
   output VGA_HSYNC;
   output [3:0] VGA_R;
   output VGA_VSYNC;
    inout [7:0] PM_D;
    inout [15:0] SRAM_D;
   
   wire CLK_108_MHz;
   wire [14:0] FIFO_VGA_DATA;
   wire FIFO_VGA_FULL;
   wire FIFO_VGA_RD;
   wire FIFO_VGA_RST;
   wire FIFO_VGA_WR;
   wire [31:0] KCVIDEO_DATA;
   wire [31:0] KCVIDEO_FIFO_DATA;
   wire KCVIDEO_FIFO_WR;
   wire [13:0] LOGO_A;
   wire [0:0] LOGO_D;
   wire RESET;
   wire [16:0] VGA_ADDR;
   wire VGA_ADDR_WR;
   wire [14:0] VGA_DATA;
   wire XLXN_348;
   wire XLXN_349;
   wire XLXN_1141;
   wire XLXN_1152;
   wire XLXN_1161;
   
   FIFO128  FIFO_VGA (.clk(CLK_108_MHz), 
                     .din(FIFO_VGA_DATA[14:0]), 
                     .rd_en(FIFO_VGA_RD), 
                     .rst(FIFO_VGA_RST), 
                     .wr_en(FIFO_VGA_WR), 
                     .dout(VGA_DATA[14:0]), 
                     .empty(), 
                     .full(FIFO_VGA_FULL));
   KCVIDEO_INTERFACE  iKCVIDEO_INTERFACE (.B(KC_B), 
                                         .CLK(CLK_108_MHz), 
                                         .EX(KC_EX), 
                                         .EZ(KC_EZ), 
                                         .FIFO_FULL(XLXN_1161), 
                                         .FRAMESYNC(XLXN_1152), 
                                         .G(KC_G), 
                                         .HSYNC(KC_HSYNC), 
                                         .KC_CLK(KC_CLK), 
                                         .nRESET(nRESET), 
                                         .R(KC_R), 
                                         .ROM_DATA(LOGO_D[0]), 
                                         .VSYNC(KC_VSYNC), 
                                         .FIFO_WR(KCVIDEO_FIFO_WR), 
                                         .KCVIDEO_DATA(KCVIDEO_DATA[31:0]), 
                                         .ROM_ADDR(LOGO_A[13:0]));
   MAIN_CLK  iMAIN_CLK (.CLKIN_IN(CLK_IN), 
                       .RST_IN(RESET), 
                       .CLKFX_OUT(CLK_108_MHz), 
                       .CLK0_OUT());
   PIC32_INTERFACE  iPIC32_INTERFACE (.A(PM_A[1:0]), 
                                     .CLK(CLK_108_MHz), 
                                     .nCS(PM_nCS), 
                                     .nRD(PM_nRD), 
                                     .nRESET(nRESET), 
                                     .nWR(PM_nWR), 
                                     .SRAM_A(), 
                                     .D(PM_D[7:0]), 
                                     .SRAM_D());
   ROM  iROM (.addra(LOGO_A[13:0]), 
             .clka(CLK_108_MHz), 
             .douta(LOGO_D[0]));
   SRAM_INTERFACE  iSRAM_INTERFACE (.CLK(CLK_108_MHz), 
                                   .KCVIDEO_DATA(KCVIDEO_FIFO_DATA[31:0]), 
                                   .KCVIDEO_FIFO_EMPTY(XLXN_349), 
                                   .nRESET(nRESET), 
                                   .VGA_ADDR(VGA_ADDR[16:0]), 
                                   .VGA_ADDR_WR(VGA_ADDR_WR), 
                                   .VGA_FIFO_FULL(FIFO_VGA_FULL), 
                                   .A(SRAM_A[16:0]), 
                                   .KCVIDEO_FIFO_RD(XLXN_348), 
                                   .nBHE(SRAM_nBHE), 
                                   .nBLE(SRAM_nBLE), 
                                   .nCE(SRAM_nCE), 
                                   .nOE(SRAM_nOE), 
                                   .nWE(SRAM_nWE), 
                                   .VGA_DATA(FIFO_VGA_DATA[14:0]), 
                                   .VGA_FIFO_RST(XLXN_1141), 
                                   .VGA_FIFO_WR(FIFO_VGA_WR), 
                                   .D(SRAM_D[15:0]));
   VGA_OUTPUT  iVGA_OUTPUT (.CLK(CLK_108_MHz), 
                           .nRESET(nRESET), 
                           .SCANLINES(SCANLINES), 
                           .VGA_DATA(VGA_DATA[14:0]), 
                           .B(VGA_B[3:0]), 
                           .FIFO_RD(FIFO_VGA_RD), 
                           .FRAMESYNC(XLXN_1152), 
                           .G(VGA_G[3:0]), 
                           .HSYNC(VGA_HSYNC), 
                           .R(VGA_R[3:0]), 
                           .VGA_ADDR(VGA_ADDR[16:0]), 
                           .VGA_ADDR_WR(VGA_ADDR_WR), 
                           .VSYNC(VGA_VSYNC));
   OR2  OR_FIFO_VGA_RESET (.I0(XLXN_1141), 
                          .I1(RESET), 
                          .O(FIFO_VGA_RST));
   INV  ResetInverter (.I(nRESET), 
                      .O(RESET));
   FIFO  XLXI_1 (.clk(CLK_108_MHz), 
                .din(KCVIDEO_DATA[31:0]), 
                .rd_en(XLXN_348), 
                .rst(RESET), 
                .wr_en(KCVIDEO_FIFO_WR), 
                .dout(KCVIDEO_FIFO_DATA[31:0]), 
                .empty(XLXN_349), 
                .full(XLXN_1161));
endmodule
